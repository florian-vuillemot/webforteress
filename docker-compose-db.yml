version: '3.1'

services:
   wordpress_db:
     build:
       context: .
       dockerfile: Dockerfile-mysql
     image: wordpress_db
     volumes:
       - db_data:/var/lib/mysql
     restart: always
     environment:
       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
       MYSQL_DATABASE: ${MYSQL_DATABASE}
       MYSQL_USER: ${MYSQL_USER}
       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
     networks:
       website_internal_monitoring:
         aliases:
           - ${MYSQL_DNS}
       website_db:
         aliases:
           - ${MYSQL_DNS}

   db_backup:
     depends_on:
       - wordpress_db
     build:
       context: .
       dockerfile: Dockerfile-db-cronjob
       args:
         PASSWORD: ${MYSQL_PASSWORD}
         DBNAME: ${MYSQL_DATABASE}
         USERNAME: ${MYSQL_USER}
         DB_URL: ${MYSQL_DNS}
     image: db_backup
     volumes:
       - ./backups:/home
     networks:
       - website_db

   db_monitoring:
     depends_on:
       - wordpress_db
     build:
       context: .
       dockerfile: Dockerfile-mysql-monitoring
     environment:
       PASSWORD: somewordpress
       DBNAME: ${MYSQL_DATABASE}
       USERNAME: root
       DB_URL: ${MYSQL_DNS}
       EXPORTER_URL: db_monitoring
       DATA_SOURCE_NAME: prom_exporter:wordpress@${MYSQL_DNS}:3306
     image: db_monitoring
     networks:
       - website_db

   website_db_monitoring:
     depends_on:
       - wordpress_db
     build:
       context: .
       dockerfile: Dockerfile-wordpress-db-monitor
     image: website_db_monitoring
     environment:
       DB_DNS: ${MYSQL_DNS}
       WORDPRESS_DB_USER: ${MYSQL_USER}
       WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
       WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
     networks:
       website_internal_monitoring:
       website_monitoring:
         aliases:
           - ${WEBSITE_DNS}

volumes:
  db_data: {}

networks:
  website_db:
    driver: bridge
  website_internal_monitoring:
    driver: bridge
  website_monitoring:
    driver: bridge
